import os
import json
import psycopg2
from flask import Flask, request, jsonify
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

app = Flask(__name__)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL –Ω–∞ Railway
DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://postgres:KpoILsSduSWZjmMzjMyGGVvqHYAAODXz@postgres-q5my.railway.internal:5432/railway")

conn = psycopg2.connect(DATABASE_URL)
cur = conn.cursor()

# –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
cur.execute("""
CREATE TABLE IF NOT EXISTS webhooks (
    id SERIAL PRIMARY KEY,
    scope_id TEXT,
    payload JSONB,
    received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)
""")
conn.commit()

@app.route("/webhook/<scope_id>", methods=["POST"])
def webhook(scope_id):
    if request.content_type != "application/json":
        return jsonify({"status": "error", "message": "Unsupported Media Type"}), 415

    try:
        data = request.get_json()
        if data is None:
            raise ValueError("–ü—É—Å—Ç–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º Webhook –≤ PostgreSQL
        cur.execute("INSERT INTO webhooks (scope_id, payload) VALUES (%s, %s)", (scope_id, json.dumps(data)))
        conn.commit()

        print(f"üì© –ü–æ–ª—É—á–µ–Ω Webhook –æ—Ç {scope_id}: {data}")

        return jsonify({"status": "success", "message": "Webhook saved"}), 200

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Webhook: {e}")
        return jsonify({"status": "error", "message": str(e)}), 400

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)